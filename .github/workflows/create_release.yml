name: Create release to Sentry.

on:
  push:
    tags: 
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Get Version
      run: echo ::set-env name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Get Sentry-CLI tool
      run: |
        export INSTALL_DIR=.
        curl -sL https://sentry.io/get-cli/ | bash

    - name: Create release to Sentry
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: roy-n-roy
      run: |
        ./sentry-cli releases new -p docker_hub_update_notifier_webapp -p docker_hub_update_notifier_batch "DockerHubUpdateNotifier@v${VERSION}"
        ./sentry-cli releases set-commits --auto "DockerHubUpdateNotifier@v${VERSION}"
        ./sentry-cli releases finalize "DockerHubUpdateNotifier@v${VERSION}"

    - name: Delete release of Sentry
      if: failure()
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: roy-n-roy
      run: |
        ./sentry-cli releases delete "DockerHubUpdateNotifier@v${VERSION}"

    - name: Notify Slack
      if: always()
      uses: pioug/le-slack-message@v1.0.0
      with:
        ACTION_NAME: Build Docker Image@roy-n-roy/DockerHubUpdateNotifier
        JOB: ${{ toJson(job) }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
