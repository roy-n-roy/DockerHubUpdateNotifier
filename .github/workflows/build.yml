name: Docker image build

on:
  push:
    tags: 
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: roy-n-roy

    steps:
    - uses: actions/checkout@v2

    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - uses: crazy-max/ghaction-docker-buildx@v1

    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Get Version
      run: |
        echo ::set-env name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Get Sentry-CLI tool
      env:
        INSTALL_DIR: .
      run:  |
        curl -sL https://sentry.io/get-cli/ | bash

    - name: Create release to Sentry
      run: |
        ./sentry-cli releases new -p docker_hub_update_notifier_webapp -p docker_hub_update_notifier_batch "DockerHubUpdateNotifier@v${VERSION}"
        ./sentry-cli releases set-commits --auto "DockerHubUpdateNotifier@v${VERSION}"

    - name: Setup Docker arguments
      id: setup
      run: |
        DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/docker-hub-update-notifier
        v_array=(${VERSION//./ })
        tag=${v_array[0]}
        DOCKER_TAGS="--tag ${DOCKER_IMAGE}:latest --tag ${DOCKER_IMAGE}:${tag}"
        for n in ${v_array[@]:1}; do
          tag="${tag}.${n}"
          DOCKER_TAGS="${DOCKER_TAGS} --tag ${DOCKER_IMAGE}:${tag}"
        done

        echo ::set-output name=buildx_args::--platform linux/amd64,linux/arm64/v8,linux/arm/v7,linux/arm/v6 \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          ${DOCKER_TAGS} .

    - name: Docker Buildx Build and Push
      run: |
        docker buildx build --push ${{ steps.setup.outputs.buildx_args }}

    - name: Finalize release to Sentry
      run: |
        ./sentry-cli releases finalize "DockerHubUpdateNotifier@v${VERSION}"

    - name: Delete release of Sentry
      if: failure()
      run: |
        ./sentry-cli releases delete "DockerHubUpdateNotifier@v${VERSION}"

    - name: Clear docker config
      if: always()
      run: |
        rm -f ${DOCKER_CONFIG}

    - name: Notify Slack
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,author,action
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
