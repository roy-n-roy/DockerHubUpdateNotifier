name: Release build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-qemu-action@v1.0.1
      - uses: docker/setup-buildx-action@v1.0.2
      - uses: docker/login-action@v1.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Version
        run: |
          echo ::set-env name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Get Sentry-CLI tool
        env:
          INSTALL_DIR: .
        run: |
          curl -sL https://sentry.io/get-cli/ | bash

      - name: Create release to Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: roy-n-roy
        run: |
          ./sentry-cli releases new -p docker_hub_update_notifier_webapp -p docker_hub_update_notifier_batch "DockerHubUpdateNotifier@v${VERSION}"
          ./sentry-cli releases set-commits --auto "DockerHubUpdateNotifier@v${VERSION}"

      - name: Setup docker tag names
        id: docker
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/docker-hub-update-notifier

          v_array=(${VERSION//./ })
          ver=${v_array[0]}
          DOCKER_TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${ver}"
          for n in ${v_array[@]:1}; do
            ver="${ver}.${n}"
            DOCKER_TAGS="${DOCKER_TAGS},${DOCKER_IMAGE}:${ver}"
          done

          echo ::set-output name=image::${DOCKER_IMAGE}
          echo ::set-output name=tags::${DOCKER_TAGS}

      - name: Docker Buildx Build and Push
        uses: docker/build-push-action@v2.1.0
        with:
          tags: ${{ steps.docker.outputs.tags }}
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8
          push: true
          cache-from: ${{ steps.docker.outputs.image }}:build-cache
          cache-to: ${{ steps.docker.outputs.image }}:build-cache

      - name: Finalize release to Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: roy-n-roy
        run: |
          ./sentry-cli releases finalize "DockerHubUpdateNotifier@v${VERSION}"

      - name: Delete release of Sentry
        if: failure()
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: roy-n-roy
        run: |
          ./sentry-cli releases delete "DockerHubUpdateNotifier@v${VERSION}"

      - name: Create a Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ env.VERSION }}

      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
