version: '3.7'

services:
  webapp:
    build:
      context: .
      cache_from:
        - roynroy/docker-hub-update-notifier:nightly
      target: django
    image: docker-hub-update-notifier
    restart: always
    environment:
      TZ: Asia/Tokyo
      ALLOWED_HOSTS: 'localhost, 127.0.0.1'
      DB_ENGINE: postgresql
      DB_HOST: postgres
      DB_NAME: django
      DB_USER: django
      DB_PASS: django
      EMAIL_BACKEND: smtp
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USE_TLS: 'true'
      EMAIL_HOST_USER: ''
      EMAIL_HOST_PASSWORD: ''
      EMAIL_USE_LOCALTIME: 'false'
      DEFAULT_FROM_EMAIL: ''
      STATIC_ROOT: '/static'
    volumes:
      - django_statics:/static:rw
      - django_socket_sharing:/var/run/django:rw
    depends_on:
      - postgres

  batch:
    build:
      context: .
      cache_from:
        - roynroy/docker-hub-update-notifier:nightly
      target: django
    image: docker-hub-update-notifier
    restart: always
    command: python scheduler.py batch
    environment:
      TZ: Asia/Tokyo
      DB_ENGINE: postgresql
      DB_HOST: postgres
      DB_NAME: django
      DB_USER: django
      DB_PASS: django
      EMAIL_BACKEND: smtp
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USE_TLS: 'true'
      EMAIL_HOST_USER: ''
      EMAIL_HOST_PASSWORD: ''
      EMAIL_USE_LOCALTIME: 'false'
      DEFAULT_FROM_EMAIL: ''
    depends_on:
      - postgres

  postgres:
    image: postgres:12-alpine
    restart: always
    environment:
      POSTGRES_DB: django
      POSTGRES_USER: django
      POSTGRES_PASSWORD: django
      TZ: Asia/Tokyo
    volumes:
      - pgdata:/var/lib/postgresql/data

  nginx:
    image: nginx:1.18-alpine
    ports:
      - 80:80
      - 443:443
    restart: always
    command: sh -c "apk add --no-cache openssl && mkdir -p /etc/nginx/cert && openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/cert/server.key -out /etc/nginx/cert/server.crt -subj '/C=JP/CN=localhost' && nginx -g daemon\ off\;"
    environment:
      TZ: Asia/Tokyo
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - django_statics:/usr/share/nginx/html/static:ro
      - django_socket_sharing:/var/run/django:rw
    depends_on:
      - webapp

volumes:
  pgdata:
    driver: local
  django_statics:
    driver: local
  django_socket_sharing:
    driver: local